To do:
Create Add Review button to BreweryDetails
  Add functionality to button
Create ReviewCard to BreweryDetails

{/* <Route 
          path='/addReview'
          element={<AddReview handleAddReview={handleAddReview} />}
           /> */}

To add reviews to breweries:
make API call to get all reviews. If brewery._id ===
review.brewery.id, renders those reviews 

- create getAll() in reviewsService [complete]
- set reviews in state in App.js [complete]
- pass reviews as props to breweries [complete]
- render reviews using conditional rendering
  - if(brewery._id === review.brewery.id) {
    show review
  } 

To add favorites:
backend:
- create function in controller
 - req.body
 - populate ("owner", "brewery")
 - populate ("favorites") [index() in controllers/profiles.js]
 - create post route (/favorites, favoritesCtrl.create)
 - add favorites router to server.js 

frontend:
- set [favorites, setFavorites] in useState({}) and useEffect
- use form with button that users can click on to add to their favorites
- write a handleClick and handleSubmit function to create the favorite using favoriteService.create on frontend and favoritesCtrl.create in controller
- pass in handleClick, handleSubmit, and favorites as props to breweries



class AddNinja extends Component {
      state = {
          id: null, name: null, age: null, belt: null
       };

  handleChange = e => {
    this.setState({[e.target.id]: e.target.value });
 };

 handleSubmit = e => {
   e.preventDefault();
   this.props.addNijna(this.state);
   this.setState({id: null, name: null, age: null, belt: null });
 };

render() {
  return (
   <div>
    <h4>Add Ninja</h4>
    <form onSubmit={this.handleSubmit}>
      <label htmlFor="name">id : </label>
      <input type="text" id="id" onChange={this.handleChange} />
      <label htmlFor="name">Name : </label>
      <input type="text" id="name" onChange={this.handleChange} />
      <label htmlFor="age">Age : </label>
      <input type="text" id="age" onChange={this.handleChange} />
      <label htmlFor="belt">Belt : </label>
      <input type="text" id="belt" onChange={this.handleChange} />
      <button type="submit" className="btn btn-secondary btn-sm m-2">
        Submit
      </button>
    </form>
  </div>
   );
  }
 }

 export default AddNinja;

